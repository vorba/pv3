
@*
    Meetings Partial View
    
    *@

@(Html.Kendo().Scheduler<Purevision.Models.MeetingViewModel>()
    .Name("MeetingSchedule")
    .Date(new DateTime(2014, 12, 30))
    .StartTime(new DateTime(2015, 12, 30, 7, 00, 00))
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        //views.WorkWeekView(workWeekView => workWeekView.Selected(true));
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
        views.AgendaView();
        //views.TimelineView();
    })
    .Editable(editable =>
    {
        editable.TemplateName("CustomEditorTemplate");
    })
    .Timezone("Etc/UTC")
    .Resources(resource =>
    {
        resource.Add(m => m.RoomID)
            .Title("Room")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
                new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
                new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" }
            });
        resource.Add(m => m.Attendees)
            .Title("Attendees")
            .Multiple(true)
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
                new { Text = "Alex", Value = 1, Color = "#f8a398" },
                new { Text = "Bob", Value = 2, Color = "#51a0ed" },
                new { Text = "Charlie", Value = 3, Color = "#56ca85" }
            });
    })
    .DataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.MeetingID);
            m.Field(f => f.Title).DefaultValue("No title");
            m.Field(f => f.RoomID).DefaultValue(1);
            m.RecurrenceId(f => f.RecurrenceID);
        })
        .Events(e => e.Error("error_handler"))
        .Create("Meeting_Create", "Meetings")
        .Read("Meeting_Read", "Meetings")
        .Update("Meeting_Update", "Meetings")
        .Destroy("Meeting_Destroy", "Meetings")
        .Filter(filters =>
        {
            filters.Add(model => model.RoomID).IsEqualTo(1).Or().IsEqualTo(2);
        })
    )
)